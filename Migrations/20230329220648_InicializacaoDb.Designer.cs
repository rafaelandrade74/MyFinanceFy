// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFinanceFy.Data;

#nullable disable

namespace MyFinanceFy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230329220648_InicializacaoDb")]
    partial class InicializacaoDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyFinanceFy.Models.Categoria", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("fin_categorias");

                    b.HasData(
                        new
                        {
                            Id = "02c8b76c-8921-45f7-a4e2-0e9b5c535422",
                            Cor = "Red",
                            Nome = "Cartão de credito"
                        },
                        new
                        {
                            Id = "737bb14e-2275-48b6-b95c-3a72db4d8e6a",
                            Cor = "Blue",
                            Nome = "Conta corrente"
                        },
                        new
                        {
                            Id = "24054a77-5697-4756-a8d2-afadb219d4eb",
                            Cor = "na",
                            Nome = "Energia"
                        },
                        new
                        {
                            Id = "fe8f0229-bdc3-49f2-9ecc-37f06ca62aa2",
                            Cor = "na",
                            Nome = "Agua"
                        },
                        new
                        {
                            Id = "9526c063-297b-4982-beb6-5b6bdc4609b1",
                            Cor = "na",
                            Nome = "Condominio"
                        },
                        new
                        {
                            Id = "c9eb1dd7-891f-442d-bf7a-ed2f789caf1d",
                            Cor = "na",
                            Nome = "Internet"
                        },
                        new
                        {
                            Id = "0dd5b867-0fd0-47c8-95f7-7f8805c6039c",
                            Cor = "na",
                            Nome = "Plano celular"
                        },
                        new
                        {
                            Id = "261e7f7c-f813-46a4-b069-c7f64770c341",
                            Cor = "na",
                            Nome = "Emprestimo"
                        },
                        new
                        {
                            Id = "c83ddd39-e9e4-4e88-b9a4-6de3dd7f16a0",
                            Cor = "na",
                            Nome = "Financiamento"
                        },
                        new
                        {
                            Id = "98217e13-ca66-4b0c-9eb7-a60b8e322423",
                            Cor = "na",
                            Nome = "Consorcio"
                        },
                        new
                        {
                            Id = "2e9b6b14-3f82-430f-ae3e-aea068bdedaa",
                            Cor = "na",
                            Nome = "Curso"
                        },
                        new
                        {
                            Id = "f1dac129-8821-4120-b8e7-b62423061dea",
                            Cor = "na",
                            Nome = "Mercado"
                        },
                        new
                        {
                            Id = "48d06bf7-120e-47e5-8a88-3bf137edd84f",
                            Cor = "na",
                            Nome = "Petshop"
                        },
                        new
                        {
                            Id = "ca5e5e44-c95e-4e27-a368-ea809da85772",
                            Cor = "na",
                            Nome = "Farmacia"
                        },
                        new
                        {
                            Id = "a56a0fa5-e2fa-48fe-a0d9-83867522d272",
                            Cor = "na",
                            Nome = "Veterinario"
                        },
                        new
                        {
                            Id = "848c9d42-f376-43c7-94d7-873427f38b20",
                            Cor = "na",
                            Nome = "Salário"
                        },
                        new
                        {
                            Id = "bc36edab-dc0c-42a7-bd7d-2d95ad945733",
                            Cor = "na",
                            Nome = "13° Salário - 1° Parcela"
                        },
                        new
                        {
                            Id = "08748f77-7ed5-4b54-b024-741411fc5b7d",
                            Cor = "na",
                            Nome = "13° Salário - 2° Parcela"
                        },
                        new
                        {
                            Id = "e1ac1652-ff93-4eef-adca-7b6dd14b1923",
                            Cor = "na",
                            Nome = "Poupança"
                        },
                        new
                        {
                            Id = "1c10d76e-c74f-4e69-b880-8e19b380726a",
                            Cor = "na",
                            Nome = "Faxina"
                        },
                        new
                        {
                            Id = "747b8940-c591-42e4-93a2-4ab07310acf2",
                            Cor = "na",
                            Nome = "Salão de beleza/Barbearia"
                        },
                        new
                        {
                            Id = "b6ff3574-e54b-454d-af92-e0dfde834e0c",
                            Cor = "na",
                            Nome = "Bonus"
                        },
                        new
                        {
                            Id = "46f071d6-1a13-4cbd-960f-632105c4120c",
                            Cor = "na",
                            Nome = "Outros"
                        });
                });

            modelBuilder.Entity("MyFinanceFy.Models.Painel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("fin_paineis");
                });

            modelBuilder.Entity("MyFinanceFy.Models.PainelDados", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("DataFatura")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdCategoria")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdPainel")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Observacao")
                        .HasColumnType("longtext");

                    b.Property<int>("Parcelas")
                        .HasColumnType("int");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("int");

                    b.Property<int>("TipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdPainel");

                    b.ToTable("fin_painel_dados");
                });

            modelBuilder.Entity("MyFinanceFy.Models.PainelDadosRelModel", b =>
                {
                    b.Property<string>("AbrId")
                        .HasColumnType("longtext");

                    b.Property<int?>("AbrStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("AbrTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("AbrValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("AbrValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("AgoId")
                        .HasColumnType("longtext");

                    b.Property<int?>("AgoStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("AgoTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("AgoValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("AgoValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DezId")
                        .HasColumnType("longtext");

                    b.Property<int?>("DezStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("DezTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("DezValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("DezValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("FevId")
                        .HasColumnType("longtext");

                    b.Property<int?>("FevStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("FevTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("FevValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("FevValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("IdPainel")
                        .HasColumnType("longtext");

                    b.Property<string>("JanId")
                        .HasColumnType("longtext");

                    b.Property<int?>("JanStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("JanTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("JanValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("JanValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("JulId")
                        .HasColumnType("longtext");

                    b.Property<int?>("JulStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("JulTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("JulValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("JulValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("JunId")
                        .HasColumnType("longtext");

                    b.Property<int?>("JunStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("JunTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("JunValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("JunValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("MaiId")
                        .HasColumnType("longtext");

                    b.Property<int?>("MaiStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("MaiTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaiValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("MaiValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("MarId")
                        .HasColumnType("longtext");

                    b.Property<int?>("MarStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("MarTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("MarValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("MarValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("NovId")
                        .HasColumnType("longtext");

                    b.Property<int?>("NovStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("NovTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("NovValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("NovValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("OutId")
                        .HasColumnType("longtext");

                    b.Property<int?>("OutStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("OutTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("OutValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("OutValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("SetId")
                        .HasColumnType("longtext");

                    b.Property<int?>("SetStatusPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("SetTipoSaldo")
                        .HasColumnType("int");

                    b.Property<decimal?>("SetValor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SetValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.ToTable((string)null);

                    b.ToView("view_fin_painel_dados_rel", (string)null);
                });

            modelBuilder.Entity("MyFinanceFy.Models.PainelUsuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdPainel")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdPainel");

                    b.HasIndex("IdUsuario");

                    b.ToTable("fin_painel_usuarios");
                });

            modelBuilder.Entity("MyFinanceFy.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FullName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MyFinanceFy.Models.Usuario", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MyFinanceFy.Models.Usuario", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFinanceFy.Models.Usuario", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MyFinanceFy.Models.Usuario", null)
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyFinanceFy.Models.PainelDados", b =>
                {
                    b.HasOne("MyFinanceFy.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFinanceFy.Models.Painel", "Painel")
                        .WithMany("PainelDados")
                        .HasForeignKey("IdPainel");

                    b.Navigation("Categoria");

                    b.Navigation("Painel");
                });

            modelBuilder.Entity("MyFinanceFy.Models.PainelUsuario", b =>
                {
                    b.HasOne("MyFinanceFy.Models.Painel", "Painel")
                        .WithMany("Usuario")
                        .HasForeignKey("IdPainel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFinanceFy.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Painel");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MyFinanceFy.Models.Painel", b =>
                {
                    b.Navigation("PainelDados");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MyFinanceFy.Models.Usuario", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Tokens");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
