@model PainelDadosRelFinalModel
@{
    ViewData["Title"] = "Paineis";
}
<style>
    .table-condensed {
        font-size: 12px;
    }
</style>
<section class="content-header">
    <div class="container">
        <div class="row mb-2">
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</section>
<!-- /.content-header -->
<!-- Content Header (Page header) -->
@Html.AntiForgeryToken()
<section class="content">
    <div class="container-fluid">
        <div class="row d-flex justify-content-center">

            <!-- left column -->
            <div class="col-md-12">
                <!-- general form elements -->

                <div class="card card-solid">
                    <div class="card-header">
                        <h3 class="card-title">@ViewData["Title"]</h3>
                        <div class="card-tools">
                            <div class="row">
                                <ul class="nav nav-pills ml-auto">

                                    <li class="nav-item col-6">
                                        <input class="form-control" type="date" id="DataFatura" name="DataFatura" value="@(new DateOnly(ViewBag.Ano,ViewBag.Mes,1).ToString("yyyy-MM-dd"))">
                                    </li>
                                    <li class="nav-item">
                                        <a asp-action="Cadastrar" asp-route-IdPainel="@ViewBag.IdPainel" class="btn btn-outline-primary float-right">
                                            <i class="fas fa-plus"></i> Cadastrar fatura
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @(
                            Html
                            .Grid("MvcGrid/_GridPainelDadosView", Model.PainelDadosRel)
                            .Build(columns =>
                            {
                                columns.Add(model => model.Categoria).Titled("Categoria").Css("bg-dark");
                                columns.Add(model => model.Descricao).Titled("Descrição").Css("bg-dark");
                                columns.Add(model => model.JanId).Hidden();
                                columns.Add(model => model.JanValor).Titled("Janeiro").Formatted("{0:C2}").Width("5%");
                                columns.Add(model => model.FevId).Hidden();
                                columns.Add(model => model.FevValor).Titled("Fevereiro").Formatted("{0:C2}").Width("5%");
                                columns.Add(model => model.MarId).Hidden();
                                columns.Add(model => model.MarValor).Titled("Março").Formatted("{0:C2}");
                                columns.Add(model => model.AbrId).Hidden();
                                columns.Add(model => model.AbrValor).Titled("Abril").Formatted("{0:C2}");
                                columns.Add(model => model.MaiId).Hidden();
                                columns.Add(model => model.MaiValor).Titled("Maio").Formatted("{0:C2}");
                                columns.Add(model => model.JunId).Hidden();
                                columns.Add(model => model.JunValor).Titled("Junho").Formatted("{0:C2}");
                                columns.Add(model => model.JulId).Hidden();
                                columns.Add(model => model.JulValor).Titled("Julho").Formatted("{0:C2}");
                                columns.Add(model => model.AgoId).Hidden();
                                columns.Add(model => model.AgoValor).Titled("Agosto").Formatted("{0:C2}");
                                columns.Add(model => model.SetId).Hidden();
                                columns.Add(model => model.SetValor).Titled("Setembro").Formatted("{0:C2}");
                                columns.Add(model => model.OutId).Hidden();
                                columns.Add(model => model.OutValor).Titled("Outubro").Formatted("{0:C2}");
                                columns.Add(model => model.NovId).Hidden();
                                columns.Add(model => model.NovValor).Titled("Novembro").Formatted("{0:C2}");
                                columns.Add(model => model.DezId).Hidden();
                                columns.Add(model => model.DezValor).Titled("Dezembro").Formatted("{0:C2}");
                                columns.Add().RenderedAs(model =>
                                {
                                    decimal? soma = model.JanValor +
                                                    model.FevValor +
                                                    model.MarValor +
                                                    model.AbrValor +
                                                    model.MaiValor +
                                                    model.JunValor +
                                                    model.JulValor +
                                                    model.AgoValor +
                                                    model.SetValor +
                                                    model.OutValor +
                                                    model.NovValor +
                                                    model.DezValor;
                                    return Html.Raw(@$"<b>{soma:C2}</b>");
                                }).Titled("Total Ano").Css("bg-primary");


                            })
                            .Empty("Sem faturas cadastradas.")
                            .Filterable()
                            .Sortable()
                            .Css("table-condensed")
                            .UsingFooter("MvcGrid/_GridPainelDadosViewFooter")

                            )


                    </div>
                </div>

            </div>
        </div>
    </div>

</section>


@section Scripts{
    <partial name="_ValidationScriptsPartial">
        <script>
            $("#DataFatura").change(() => {
                const data = $("#DataFatura").val()
                const mes = data.substr(5, 2)
                const ano = data.substr(0, 4)

                var URL = window.location.protocol + "//" + window.location.host + window.location.pathname;
                var UrlParms = URL + "?mes=" + mes + "&ano=" + ano;
                console.log(UrlParms)
                window.location.href = UrlParms;
            })
        </script>

        <script>
            const grid = document.querySelector(".mvc-grid");

            // Triggered when grid's row is clicked. It's recommended to use event delegation in ajax scenarios.
            document.addEventListener("rowclick", e => {
                //e.detail.data - clicked row's data from columns.
                //e.detail.grid - grid's instance.
                //e.detail.originalEvent - original tr click event which triggered the rowclick.
                const dataid = e.detail.originalEvent.target.getAttribute("data-id");
                if (dataid != null && dataid != "") {
                    console.log("@Url.Action("Editar")/" + dataid);
                    location.href = "@Url.Action("Editar")/" + dataid;
                }

            });
        </script>
    }
